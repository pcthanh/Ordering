import { Component, OnInit } from '@angular/core';
import { AgmMap, MapsAPILoader } from '@agm/core';
import { ViewChild, ElementRef, NgZone } from '@angular/core'
import { FormControl, NgModel } from '@angular/forms';
import { HomeService } from "../services/home.service";
import { Gof3rUtil } from "../util/gof3r-util";
import { RegisterCustomerDevice } from "../models/RegisterCustomerDevice";
import { RegisterDeviceRequest } from "../models-request/register-device-request";
import { GetInitParamRequest } from "../models-request/get-init-param-request";
import { RequestNull } from "../models-request/request-null";
import { GetInitialParams } from "../models/GetInitialParams";
import { PickupService } from "../services/pickup.service";
import { CommonDataRequest } from "../models-request/request-comon-data";
import { GetAllOutletListV2Request } from "../models-request/get-all-outlet-list-v2"
import { GetAllOutletListV2Model } from "../models/GetAllOutletListV2";
import { ActivatedRoute, Params, Router } from "@angular/router";
import { SearchUserByEmailOrPhoneModel } from "../models-request/search-user-by-email-phone";
import { SearchUserByEmailOrPhone } from "../models/SearchUserByEmailOrPhone";
import { CheckLogonRequest } from "../models-request/check-logon";
import { CustomerInfoMainModel } from "../models/CustomerInfoMain";
import { BlockUI, NgBlockUI } from 'ng-block-ui';
import { RequestLogOutModel } from "../models-request/request-log-out-customer";
import { InputOTPModel } from "../models/InputOTP";
import { RequestRegisterCustomerModel } from "../models-request/request-register-customer";
import { SingUpModel } from "../models/SignUp";
import { RequestRegisterOTP } from "../models-request/request-register-otp";
import { ResponseModel } from "../models/Response";
import { AddressListModel } from "../models/AddressList";
import { AddressIteModel } from "../models/AddressItem";
import { AddeliveryAddressModel } from "../models-request/add-delivery-address";
import { ListDeliveryAddress } from "../models/ListDeliveryAddress";
import { Gof3rModule } from "../util/gof3r-module";
import { EventSubscribeService } from "../services/instance.service";
import { AutoCompleteService } from 'ng4-auto-complete';
import { CreateNewAutocompleteGroup, SelectedAutocompleteItem, NgAutocompleteComponent } from "ng-auto-complete";
import { ErrorModel  } from "../models/Error";
import { MapLocation } from "../models/MapLocation";
declare var $: any;
const ORDER_DELIVERY = "DELIVERY"
const ORDER_PICKUP = "PICKUP";
@Component({
    selector: 'gof3r-home',
    templateUrl: 'gof3r-home.component.html'
})

export class Gof3rHomeComponent implements OnInit {
    @ViewChild('agmMap') agmMap: AgmMap
    public searchControl: FormControl;
    @ViewChild("search")
    public searchElementRef: ElementRef;
    responseData: ResponseModel;
    lat: number = 0;
    lng: number = 0;
    latMap: number;
    lngMap: number;
    actionClickDlivery: number = 0;
    actionClickPickup: number = 0;
    registerDevice: RegisterCustomerDevice;
    getInitialParams: GetInitialParams;
    getAllOutletListV2: GetAllOutletListV2Model;
    orderType: string = ""
    inputAddress: string = ""
    haveData: number = 1;
    userName: string = "";
    passWord: string = "";
    customerInfoMain: CustomerInfoMainModel;
    isLogin: string = "LOG IN";
    @BlockUI() blockUI: NgBlockUI;
    geolocationPosition: any
    latCurrent: number;
    lngCurrent: number;
    isUserLogin: boolean = false;
    userNameLogOut: string = ""
    test = [{ user: 'thanh', pass: '18' }, { user: 'vv', pass: '12' }]
    inputOTPModel: InputOTPModel
    requestCustomer: RequestRegisterCustomerModel;
    signUp: SingUpModel;
    inputOTPStr: string = "";
    addressList: AddressListModel;
    listDeliveryAddressShow: ListDeliveryAddress
    listDeliveryAddress: ListDeliveryAddress;
    showListSelectAddress: boolean = false;
    listMap: any[] = [];
    error:ErrorModel;
    selectCountryCode:string=""
    isHaveCountry:boolean=false;
    @ViewChild(NgAutocompleteComponent) public completer: NgAutocompleteComponent;

    public list1 =

    [
        { name: 'Option 1', id: '1' },
        { name: 'Option 2', id: '2' },
        { name: 'Option 3', id: '3' },
        { name: 'Option 4', id: '4' },
        { name: 'Option 5', id: '5' },
    ];

    list: any[] = [];
    mapLoaction=[
        {Name:"JURONG WEST",Enbale:"N",map:'<g id="Jurong_West">'+
                                '<path fill="#712FDB"  stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" d="M255.385,287.839c0,0,0.702-6.082-8.187-5.38'+
                                    'c-8.888,0.702-10.525,4.621-12.864,2.661s-6.549-7.34-15.671-7.34s-15.671,2.807-16.139,0s1.17-8.654,2.573-14.267'+
                                    's2.878-9.824-2.654-18.712c-5.532-8.888-8.807-14.735-13.484-13.098c-4.678,1.637-3.04,3.508-5.38,11.695'+
                                    'c-2.339,8.187-1.403,9.356-10.525,9.59s-11.461,3.742-13.566,4.678c-2.105,0.935-4.678,0.468-4.678,0.468s-0.935,3.04-3.976,4.678'+
                                    's-5.614-0.468-8.654,0.935s-8.42,7.719-5.847,12.162c2.573,4.444,4.678,2.339,5.146,5.847s1.637,13.566-0.234,13.332'+
                                    's-3.977-1.403-3.977-1.403s-2.105,3.742-4.21,0.234s-0.935-8.888-3.04-10.759s-4.678-4.444-8.42-3.04s-10.759,5.146-13.8,3.275'+
                                    'c-3.04-1.871-1.637-3.977-5.847-4.21c-4.21-0.234-10.525,0.468-13.8,0.935c-3.275,0.468-1.637,2.105-5.613,7.251'+
                                    's-2.807,6.082,0,11.227s3.508,7.251,3.275,11.695c-0.234,4.444-4.656,7.017-5.837,5.847c-1.18-1.17,0.925-6.783-1.648-9.59'+
                                    's-1.637-2.105-8.42,1.403c-6.783,3.508-54.733,121.86-58.943,127.474s10.174,17.191,10.174,17.191s10.174-11.578,19.647-15.437'+
                                    's12.28,4.21,14.385,12.28c2.105,8.069,5.964-2.456,12.28-6.666s8.42-2.807,7.719,4.561s-16.139,11.929-13.332,16.49'+
                                    's1.754,3.859,5.263,5.964c3.508,2.105,4.561,3.859,8.42,0s13.683-15.788,13.683-14.385s-0.351,7.719-0.351,7.719'+
                                    's-8.42,6.666-10.174,11.578s-4.912,7.017-4.912,7.017l-3.158,1.754c0,0,8.42,7.017,7.368,8.069'+
                                    'c-1.053,1.053,5.263-4.912,8.771-1.754s3.859-0.702,6.666,3.508s8.069,5.614,13.332,12.981c5.263,7.368,5.614,11.578,12.63,11.929'+
                                    'c7.017,0.351,7.368-5.263,10.525-6.666c3.158-1.403,11.227-4.21,9.122-10.174s-3.158-7.485-4.795-9.59s-6.315-7.485-6.783-10.759'+
                                    'c-0.468-3.275,0.935-5.614,0.702-7.952c-0.234-2.339-2.573-5.38,6.315-5.146c4.444,1.403,4.912,5.146,4.912,5.146'+
                                    's-1.17,8.187,1.637,9.824c2.807,1.637,3.275-0.234,5.146,0.935c1.871,1.17,3.275,9.122,5.145,9.356'+
                                    'c1.871,0.234,12.63,3.275,13.566-2.339c0.935-5.613-1.17-5.847-1.871-11.461s-3.04-20.349,0.935-18.946s4.912,5.614,5.614,10.525'+
                                    'c0.702,4.912-1.871,11.461,0.234,15.905s3.275,6.783,9.59,4.912s9.356-5.146,12.864-5.847c3.508-0.702,4.21-2.807,5.847-8.888'+
                                    'c1.637-6.082,3.508-9.356,8.654-9.824c5.146-0.468,4.912,2.573,7.017,5.146s7.251,2.339,8.888,5.38c1.637,3.04,0,7.017,4.21,7.952'+
                                    's12.864,1.871,14.267-0.935s0.468-11.227,2.573-15.671s3.04-7.485,5.38-2.573s2.105,7.952,1.637,10.759s-3.742,12.162-0.234,12.864'+
                                    's8.42,1.637,14.502,0.702c6.082-0.935,10.993-2.807,13.098-1.871c2.105,0.935-0.935-3.508-3.508-6.549'+
                                    'c-2.573-3.04-7.719-4.21-12.162-5.847c-4.444-1.637-12.63-9.356-7.719-10.057c4.912-0.702,7.251-1.637,12.162,2.105'+
                                    'c4.912,3.742,8.66,8.654,11.932,10.057c3.272,1.403,5.143-1.403,6.312,1.637c1.17,3.04,1.637,3.977,6.315,4.912'+
                                    'c4.678,0.935,5.38-0.935,5.38-0.935s1.17-5.847-3.275-8.888c-4.444-3.04-7.719-4.912-7.719-4.912s3.508-8.654,5.847-14.267'+
                                    's6.082-16.841,11.461-24.559c5.379-7.719,10.993-20.115,10.057-23.156c-0.935-3.04-3.275-3.977-7.251-4.21'+
                                    'c-3.976-0.234-7.017-0.234-6.082-5.38s1.871-8.42,4.678-8.187c2.807,0.234,5.819,4.678,8.757,0s0.103-7.952,0-11.227'+
                                    'c-0.103-3.275-4.313-4.912-5.482-11.227c-1.17-6.315-3.508-17.309-2.573-20.349c0.937-3.04,6.083-5.847,3.743-10.057'+
                                    'c-2.339-4.21-0.702-3.04-6.315-5.613c-5.614-2.573-4.21-2.573-9.59-3.275s-9.356-2.339-15.203-1.871'+
                                    'c-5.847,0.468-13.566-3.976-17.309-3.976c-3.742,0-7.719-7.952-13.098-10.759c-5.38-2.807-10.993-2.573-5.614-8.42'+
                                    'c5.38-5.847,7.485-8.654,9.824-10.292C253.981,292.049,255.385,287.839,255.385,287.839z"'+
                                '/>'+
                                '<text transform="matrix(1 0 0 1 133.2906 391.4559)" fill="#FFFFFF" font-family="Roboto" font-size="12.6304">JURONG WEST</text>'+
                                '<path fill="none" stroke="#000000" stroke-miterlimit="10" d="M335.845,508.17" />'+
                            '</g>'},
        {Name:"LIM CHU KANG/CHOA CHU KANG",Enbale:"N",map:' <g id="LCK_x2F_CCK">'+
                                '<path fill="#8E49FE" stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" d="M259.01,147.033'+
                                    'c0,0,14.735-17.191,23.857-34.734c9.122-17.542,20.349-27.717,28.418-27.015c8.069,0.702,18.946,2.807,29.12,3.859'+
                                    'c10.174,1.053,17.893,1.053,19.998,2.807s6.315,1.053,11.227,5.263s8.771,16.139,11.578,22.805s0,11.578,0,11.578'+
                                    's-9.473,11.578-6.315,21.402c3.158,9.824,5.263,20.349,4.21,32.629c-1.053,12.28-9.473,35.786-1.754,48.066'+
                                    's14.385,19.647,11.578,24.208s-11.578,5.964-13.683,8.42c-2.105,2.456-3.508,3.859-7.368,9.122'+
                                   'c-3.859,5.263-6.666,12.28-12.981,16.841s-8.771,5.964-14.034,12.28c-5.263,6.315-15.836,17.542-17.566,22.805'+
                                    'c-1.73,5.263,2.432,17.893,0,21.051s-5.299,6.615-10.707,0c-5.408-6.615-3.445-8.544-6.947-13.051'+
                                    'c-1.396-1.796-7.23-4.142-7.23-4.142s-1.673-1.321-4.104-1.715c-2.431-0.394-10.067-1.994-12.861-2.219s-7.827-0.004-9.911-0.512'+
                                    'c-2.085-0.508-7.128-2.368-9.636-2.962s-4.216-0.019-6.259-1.964c-2.043-1.944-5.824-6.194-7.203-7.312s-3.414-2.443-5.825-3.399'+
                                    'c-2.412-0.956-5.141-1.702-4.786-4.317s3.071-4.007,4.778-5.92c1.706-1.914,7.218-7.277,7.672-7.752'+
                                    'c0.455-0.475,3.828-4.462,3.055-6.413c-0.774-1.951-1.824-4.395-5.55-4.281c-3.725,0.114-8.49,1.065-10.901,2.073'+
                                    'c-2.411,1.007-3.332,1.64-5.638-0.403c-2.305-2.043-6.175-5.945-13.535-6.322s-15.317,2.091-16.25,1.032'+
                                    'c-0.934-1.059-1.913-3.643,0.565-11.064c2.478-7.42,2.595-9.76,3.179-15.724c0.584-5.964,3.508-15.437,5.146-23.857'+
                                    'c1.637-8.42,3.976-16.373,5.613-26.664c1.637-10.292,6.082-17.074,4.21-25.027c-1.871-7.952-6.082-9.824-3.976-15.671'+
                                    'c2.105-5.847,3.04-10.993,5.614-16.373c2.573-5.38,6.549-7.719,9.59-7.719c3.04,0,5.614-2.339,10.292,1.637'+
                                    'C248.368,142.355,246.496,146.8,259.01,147.033z" />'+
                                '<text transform="matrix(1 0 0 1 253.4763 216.8524)" fill="#FFFFFF" font-family="Roboto" font-size="12.6304">LIM CHU KANG</text>'+
                                '<text transform="matrix(1 0 0 1 247.4996 232.0086)" fill="#FFFFFF" font-family="Roboto" font-size="12.6304">CHOA CHU KANG</text>'+
                            '</g>'},
        {Name:"BUKIT BATOK",Enbale:"N",map:'<g id="Bukit_Batok">'+
                               '<path fill="#8E49FE" stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" d="M482.966,345.144c0,0-1.17-3.508-3.742-4.912'+
                                    'c-2.572-1.403-3.508-2.807-3.508-2.807s-5.146-1.637-10.292-7.485c-5.146-5.847-14.267-22.688-16.139-30.874'+
                                    'c-1.871-8.187-3.742-17.074-6.549-24.091s-6.315-6.784-6.315-6.784s-8.187-5.38-8.42-6.082c-0.234-0.702-2.807-2.339-2.807-2.339'+
                                    's-5.847-2.105-12.162-2.339c-6.315-0.234-8.654,0.234-13.098,1.403c-4.444,1.17-9.563-0.161-9.563-0.161s-3.915,3.087-6.159,4.052'+
                                    'c-2.244,0.966-5.388,2.219-6.177,2.906c-0.789,0.688-9.392,11.658-11.722,15.316c-2.329,3.659-6.03,8.867-8.817,10.885'+
                                    'c-2.787,2.017-10.424,7.803-14.316,12.35c-3.892,4.546-14.079,15.872-15.982,19.528c-1.903,3.656-2.86,3.852-1.609,15.215'+
                                    'c1.251,11.362,1.017,10.544,4.058,12.415c3.04,1.871,4.444,4.678,8.771,6.666c4.327,1.988,4.912,3.391,9.824,3.742'+
                                    'c4.912,0.351,7.485,4.327,8.42,5.614c0.935,1.287,2.573,2.456,6.666,3.158c4.093,0.702,6.432,1.286,7.836,3.508'+
                                    's1.521,3.976,4.561,3.976c3.04,0,9.005,1.988,16.958,6.666c7.952,4.678,11.578,5.964,14.034,8.069s6.315,3.508,11.227,1.871'+
                                    's6.082-1.17,11.344-4.795c5.263-3.625,9.005-6.783,12.397-7.251c3.391-0.468,4.21-0.585,4.21-0.585s-2.105-4.093,2.456-8.654'+
                                    'c4.561-4.561,5.496-5.38,8.654-7.134c3.158-1.754,3.04-3.508,5.38-3.158c2.34,0.35,2.924,0,4.912-1.403s4.444-3.977,6.432-5.847'+
                                    'c1.988-1.871,4.327-5.029,6.315-6.432C482.031,347.95,483.875,347.077,482.966,345.144z"'+
                                '/>'+
                                '<text transform="matrix(1 0 0 1 357.5983 331.1102)" fill="#FFFFFF" font-family="Roboto" font-size="12.6304">BUKIT BATOK</text>'+
                            '</g>'},
        {Name:"JURONG EAST",Enbale:"N",map:'<g id="Jurong_East">'+
                                '<path fill="#8E49FE" stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" d="M389.641,444.433c0,0,1.988,0.702,3.04-1.988'+
                                    'c1.053-2.69-0.117-4.093,2.339-5.029c2.456-0.935,3.275-0.702,5.847-5.146c2.573-4.444,4.678-4.678,4.678-8.537'+
                                    's-2.222-17.659-2.105-21.402c0.117-3.743,1.994-10.551,2.105-10.476c0.112,0.075-7.937-4.373-9.504-5.258'+
                                    'c-1.567-0.886-7.788-4.459-9.921-5.411c-2.133-0.951-6.141-2.705-8.269-2.943c-2.128-0.238-3.318,0.076-4.187-0.68'+
                                    's-2.637-4.632-4.451-5.395c-1.815-0.763-8.994-1.62-10.774-3.213c-1.779-1.593-3.46-4.804-6.056-5.883'+
                                    'c-2.597-1.079-4.399-1.818-6.201-1.57c-1.801,0.248-2.511-0.696-4.525-1.797c-2.015-1.101-4.33-1.836-6.322-3.552'+
                                    's-4.951-4.365-5.69-4.811c-0.738-0.447-2.25-1.303-2.56-2.277s-1.175-2.192-1.175-2.192s-0.78,2.24-2.201,3.45'+
                                    'c-1.421,1.21-3.555,2.2-4.694,1.673c-1.139-0.527-5.144-3.251-6.843-6.963s-2.342-5.644-2.342-5.644s-0.077,2.057-1.488,3.908'+
                                    'c-1.41,1.851-3.593,4.313-3.342,7.345c0.25,3.032,1.28,9.862,2.104,14.119c0.824,4.258,1.255,7.219,3.945,10.465'+
                                    's1.91,3.998,2.576,6.446c0.666,2.448,1.471,5.731,0.362,7.682s-2.243,3.726-3.582,3.522s-4.092-2.124-5.904-2.124'+
                                    'c-1.812,0-2.752,0.892-3.832,4.276c-1.08,3.384-1.589,7.671,0.479,8.509s6.526,0.248,8.543,1.41'+
                                    'c2.017,1.163,4.295,2.793,3.377,6.019c-0.919,3.226-3.56,9.741-4.917,12.252c-1.356,2.512-7.361,11.358-9.789,16.796'+
                                    'c-2.428,5.437-6.526,15.724-7.93,19.137c-1.403,3.413-5.219,9.876-4.455,10.897c0.763,1.021,7.127,4.253,8.559,6.218'+
                                    'c1.431,1.966,2.832,5.82,2.247,8.043c-0.584,2.222,6.9,0.819,16.49,1.754c9.59,0.935,13.683,1.403,16.958,2.222'+
                                    'c3.275,0.819,5.496,0,6.9-1.053c1.403-1.053,2.339-2.339,3.508-0.117c1.17,2.222,0.79,7.251,5.073,9.005'+
                                    'c4.283,1.754,7.674,1.754,11.885-0.468c4.21-2.222,5.789-3.918,5.263-6.373c-0.526-2.456-2.631-3.333-5.263-5.438'+
                                   'c-2.631-2.105-4.912-1.754-6.666-2.807c-1.754-1.053-3.771-3.508-5.219-5.087s-4.254-0.877-6.359-4.035'+
                                    'c-2.105-3.158-3.333-6.315-5.614-7.192s-5.263-4.736-10.174-7.719c-4.912-2.982-6.841-6.315-5.614-10.525s6.315-14.56,6.315-20.7'+
                                    's-2.807-14.385,0-15.262s3.333-1.228,6.315,2.456s5.438,3.508,9.648,4.561c4.21,1.052,4.561,1.403,6.841,3.859'+
                                    'c2.281,2.456,7.368,2.281,15.788,2.807s8.947,0.702,12.455,2.105s0.877,4.21,4.21,6.666c3.333,2.456,3.684,1.754,6.14,5.087'+
                                    'C388.119,441.388,387.302,443.79,389.641,444.433z" />'+
                                '<text transform="matrix(1 0 0 1 314.59 401.5721)" fill="#FFFFFF" font-family="Roboto" font-size="12.6304">JURONG EAST</text>'+
                            '</g>'},
        {Name:"PASIR PANJANG",Enbale:"N",map:'<g id="Pasir_Panjang">'+
                                '<path fill="#8E49FE" stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" d="M379.175,459.987c0,0,0.877,1.754-1.403,3.508'+
                                    's-11.227,5.087-13.157,8.069c-1.93,2.982-5.614,7.368-7.017,8.069c-1.403,0.702-5.654,1.862-5.654,1.862s-2.556-1.554-3.571-2.635'+
                                    'c-1.015-1.082-2.188-2.93-3.31-3.434s-4.368-1.351-5.71-3.511s-2.93-5.465-4.272-6.328c-1.342-0.864-3.707-2.497-5.92-4.353'+
                                    's-5.31-3.961-6.419-4.752s-4.979-3.069-5.148-7.721c-0.169-4.651,2.976-8.771,4.263-12.704s2.648-8.918,2.354-11.854'+
                                    'c-0.294-2.937-1.43-10.956-1.097-11.978s1.821-3.014,4.075-2.229c2.254,0.785,3.635,4.963,7.081,5.969'+
                                    'c3.445,1.006,9.128,2.001,10.519,3.241s2.073,4.022,9.23,4.458c7.157,0.436,17.57,0.87,20.084,2.163'+
                                    'c2.513,1.293,2.885,0.916,3.254,2.753c0.368,1.836,0.976,3.664,2.764,4.818c1.788,1.154,4.283,2.979,6.098,5.487'+
                                    'c1.815,2.506,1.62,4.752,3.077,5.428c1.457,0.675,2.071,2.078,3.387,2.868c1.316,0.789,5.175,5.35,8.859,8.333'+
                                    'c3.684,2.982,2.368,3.508,4.649,3.947c2.28,0.439,4.386,1.228,5.614,2.894c1.228,1.667,2.982,5.526,3.245,5.438'+
                                    's3.158,2.281,5.526,4.736c2.368,2.456,3.421,3.947,5.877,5.877c2.456,1.93,6.578,7.894,9.561,7.894c2.983,0,6.14-0.877,7.192,0'+
                                    'c1.052,0.877,7.192,6.841,11.578,8.947c4.386,2.105,9.473,3.333,9.824,4.912c0.351,1.579-4.035,1.93-2.456,5.614'+
                                    'c1.579,3.684,5.789,6.491,3.333,11.402c-2.456,4.912-4.386,9.122-0.351,12.806s5.964,3.684,5.789,8.069'+
                                    'c-0.175,4.386-2.631,4.736-1.754,8.069c0.877,3.333,1.053,6.666,1.053,6.666s-3.508-1.053-6.315-3.508'+
                                    'c-2.807-2.456-12.981-15.963-16.665-21.402c-3.684-5.438-7.017-11.052-9.824-11.227s-4.035,0.909-6.491,1.594'+
                                    'c-2.456,0.686-1.228-1.243-4.21-1.594s-5.789,0.702-6.841-1.228s-1.052-1.754-3.859-2.982s-4.561-4.386-6.841-7.368'+
                                    'c-2.281-2.982-2.456-8.069-5.087-10.35c-2.631-2.28-2.28-3.508-4.561-7.017c-2.281-3.508-3.684-9.297-6.315-11.929'+
                                    'c-2.631-2.631-6.315-7.719-9.473-10.701C380.579,462.092,379.175,459.987,379.175,459.987z'+
                                '/>'+

                                '<text transform="matrix(0.7329 0.6803 -0.6803 0.7329 355.9987 433.834)" fill="#FFFFFF" font-family="Roboto" font-size="12.6301">PASIR PANJANG</text>'+
                            '</g>'},
        {Name:"CLEMENTI",Enbale:"N",map:'<g id="Clementi">'+
                                '<path fill="#8E49FE" stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" d="M477.587,388.415c0,0-9.59,0.935-13.8,0'+
                                    'c-4.21-0.935-15.905-7.952-15.905-8.888c0-0.935-1.988,2.456-1.988,2.456s-4.737,0.435-6.253,1.155s-7.471,4.748-9.819,6.309'+
                                   'c-2.348,1.561-6.151,3.463-9.868,4.543c-3.717,1.081-8.538,1.577-10.506,0.46c-1.969-1.116-3.901-2.593-3.901-2.593'+
                                    's-2.083,6.989-2.061,9.715c0.022,2.726,1.43,14.663,1.716,17.717c0.286,3.055,0.919,3.896,0.246,5.756'+
                                    'c-0.673,1.86-1.721,3.029-2.974,4.835c-1.253,1.807-2.519,4.553-3.797,5.577c-1.278,1.024-3.593,1.284-4.416,2.333'+
                                    's-0.892,3.457-1.578,4.655c-0.686,1.198-2.213,2.099-3.387,1.869c-1.174-0.23,4.347,3.482,6.615,5.894'+
                                    'c2.269,2.412,8.001,8.649,9.637,9.097s4.268,1.354,5.261,2.203c0.994,0.848,1.988-14.853,9.706-22.922'+
                                    'c7.719-8.069,8.069-12.046,20.934-9.59s20.349,3.158,26.781,8.303c6.432,5.146,12.397,11.578,14.969,15.437'+
                                    'c2.573,3.859,1.403,11.636,4.912,15.32c3.508,3.684,10.525,8.947,14.911,11.753c4.386,2.806,5.789,5.789,7.543,3.333'+
                                    'c1.754-2.456,2.105-4.386,1.93-7.017c-0.175-2.631,0.877-13.157,4.035-18.068c3.158-4.912,5.263-13.858,7.192-14.736'+
                                    'c1.93-0.877,2.631-1.228,4.912-5.263c2.28-4.035,5.438-10.525,7.543-11.753c2.105-1.228,4.386-3.333,4.386-3.333l3.158-2.105'+
                                    'c0,0-7.017-1.579-9.122-3.333s-2.982-1.403-5.789-2.28s-4.736-3.333-6.491-4.21c-1.754-0.877-7.017-0.172-8.42-1.226'+
                                    'c-1.403-1.054-3.158-3.51-7.543-4.212c-4.386-0.702-10.174-5.614-14.735-9.122s-9.824-5.614-11.227-6.14'+
                                    'C478.989,389.817,480.052,388.219,477.587,388.415z" />'+
                                '<text transform="matrix(1 0 0 1 431.4503 416.659)" fill="#FFFFFF" font-family="Roboto" font-size="12.6304">CLEMENTI</text>'+
                            '</g>'},
        {Name:"BUKIT TIMAH",Enbale:"N",map:'<g id="Bukit_Timah">'+
                                '<path fill="#8E49FE" stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" d="M483.192,345.951c0,0,3.166-4.901,7.727-2.445'+
                                    'c4.561,2.456,5.438,2.807,6.666,3.333c1.228,0.526,3.333,3.684,4.386,4.386s3.333-0.351,4.386,2.456s2.281,8.069,4.912,9.824'+
                                    'c2.631,1.754,4.035,1.403,6.841,4.561c2.807,3.158,6.666,6.315,10.525,10.174s7.192,5.789,11.052,8.245'+
                                    'c3.859,2.456,7.357,5.964,10.082,7.017s6.934,1.827,6.934,1.827s0.877-2.529,2.631-6.037c1.754-3.508,4.912-10.35,8.069-12.455'+
                                    'c3.158-2.105,8.245-6.58,15.086-7.764c6.841-1.183,18.244,1.097,22.805,0.922s7.192-2.281,9.473,1.403s1.93,7.017,1.754,10.525'+
                                   'c-0.175,3.508,3.508,10.174,5.263,14.56c1.754,4.386,2.281,8.771-1.053,11.227c-3.333,2.456-10.174,6.14-12.104,6.491'+
                                    's-4.561,1.053-7.017,0s-7.368-2.281-11.227-1.579s-1.228-0.175-3.684,3.158s-4.386,3.508-4.386,7.719s0,6.841,0,6.841'+
                                    's-4.561-3.333-7.017-3.859c-2.456-0.526-6.666,0.351-9.824-0.702c-3.158-1.053-4.736-2.807-7.368-2.807'+
                                    'c-2.631,0-3.007,1.93-4.924,0.351s-4.548-1.93-4.548-1.93l-4.912-0.526l-4.023-1.088c0,0-3.792-1.342-4.445-1.794'+
                                    'c-0.653-0.451-2.517-1.745-3.516-1.984c-0.998-0.238-3.759-0.896-4.857-1.641s-3.08-2.949-4.561-3.318'+
                                    'c-1.481-0.369-5.92-0.333-7.17-0.78c-1.25-0.446-4.174-3.058-5.359-3.569c-1.184-0.512-3.308-0.634-5.509-1.676'+
                                    'c-2.202-1.043-9.488-6.097-11.478-7.615s-6.933-4.666-8.873-5.541c-1.94-0.875-3.775-1.191-4.245-2.108'+
                                    'c-0.469-0.917-0.93-1.361-1.515-1.349c-0.585,0.01-9.953,0.527-11.745,0.346c-1.791-0.181-8.043-2.445-10.483-3.831'+
                                    's-4.776-2.79-5.601-3.355c-0.824-0.565-2.462-2.037-2.462-2.037l-1.988,2.456c0,0-1.424-1.733-0.232-4.292'+
                                    'c1.191-2.559,6.196-7.94,7.479-8.928c1.283-0.988,5.084-3.24,5.977-4.092c0.893-0.853,1.078-1.688,3.266-1.633'+
                                    'c2.187,0.055,7.418-3.464,9.381-5.357s4.6-4.775,5.683-5.899s3.069-2.649,4.016-3.403'+
                                    'C482.407,347.625,482.833,347.693,483.192,345.951z" />'+
                                '<text transform="matrix(1 0 0 1 516.8814 408.5311)" fill="#FFFFFF" font-family="Roboto" font-size="12.6304">BUKIT TIMAH</text>'+
                            '</g>'},
        {Name:"WOODLANDS",Enbale:"N",map:'<g id="Woodlands">'+
                                '<path fill="#8E49FE" stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" d="M536.762,21.899c0,0-0.117,0-0.321,0.008'+
                                    'c-1.222,0.046-5.595,0.363-7.397,2.565c-2.105,2.573-4.093,3.099-5.847,5.38s-8.069,5.964-9.648,6.14'+
                                    'c-1.579,0.175-4.21,0.702-8.947,4.035c-4.736,3.333-7.017,2.982-8.947,4.561s-8.771,2.456-10.35,2.631'+
                                    'c-1.579,0.175-6.841,3.158-10.174,3.684s-8.596-0.526-14.911,0s-13.508,1.228-14.735,3.859c-1.228,2.631-2.807,10.701-3.508,15.086'+
                                    'c-0.702,4.386-1.403,5.614-4.561,7.543c-3.158,1.93-9.297,0.175-13.508,3.859c-4.21,3.684-8.42,7.543-8.069,11.402'+
                                    's1.93,12.806,1.93,15.613s-0.175,6.666-3.333,8.245s-5.263,0.702-8.245,2.281s-8.245,6.315-10.876,7.894'+
                                    'c-2.631,1.579-4.386,0.877-5.964,2.105c-1.579,1.228-7.682,4.936-7.682,4.936s-2.306,3.77-2.889,5.077'+
                                    'c-0.584,1.308-3.026,6.593-2.523,10.157c0.502,3.564,3.862,15.974,4.265,19.045s0.879,8.418,0.856,10.779'+
                                    'c-0.022,2.361-0.53,9.418-0.878,11.404c-0.348,1.986-2.583,13.402-2.922,15.448c-0.34,2.046-1.418,9.993-1.428,12.623'+
                                    'c-0.01,2.629,0.657,11.485,3.202,15.434c2.545,3.948,7.585,11.452,8.576,13.081c0.992,1.629,3.845,6.215,3.656,8.145'+
                                    'c-0.188,1.93-1.212,3.756-1.212,3.756s4.838,0.967,7.2,0.564c2.363-0.403,7.567-1.824,10.898-1.834'+
                                    'c3.331-0.01,15.03,1.497,15.878,1.932c0.848,0.435,3.761,3.118,5.762,4.532c2.001,1.414,5.407,4.161,6.313,4.323'+
                                    'c0.906,0.162,3.485,1.354,4.653,3.496c1.168,2.142,3.026,6.839,3.741,9.306c0.715,2.467,3.53,13.941,4,16.007'+
                                    'c0.469,2.066,4.495,13.043,6.442,16.71c1.948,3.667,6.939,12.306,8.793,14.535s6.573,6.58,8.217,7.491'+
                                    'c1.644,0.91,3.448,1.689,3.448,1.689s1.12,1.358,2.314,2.083c1.194,0.724,2.151,1.057,3.027,2.277'+
                                    'c0.875,1.22,2.135,4.167,2.135,4.167s2.466-3.145,3.955-3.133c1.489,0.011,4.411,1.052,5.912,1.831'+
                                    'c1.502,0.778,4.383,1.948,4.978,2.471c0.595,0.523,2.847,3.811,3.932,4.106c1.086,0.296,3.711,0.488,4.386,2.456'+
                                    's2.669,8.274,4.367,9.392s4.492,2.109,5.939,3.551s9.888,9.585,11.531,11.179s8.445,6.755,9.969,7.719s6.571,4.741,7.949,5.73'+
                                    'c1.377,0.989,8.135,4.882,10.328,4.005c1.059-1.963,4.396-8.984,4.396-8.984s4.096-7.2,5.123-8.163s8.533-6.359,11.095-7.342'+
                                    'c2.563-0.982,7.938-2.405,13.672-1.923c5.734,0.481,11.859,1.462,14.57,1.152s6.426-0.855,7.044-0.627'+
                                    'c0.617,0.228,1.728-0.864,2.254-2.881s1.667-3.508,2.544-7.543s0.789-9.21-1.491-12.367c-2.281-3.158-8.245-11.578-9.648-12.543'+
                                    's-2.456-0.702-3.596-1.842s-0.175-2.807-2.807-3.684c-2.631-0.877-4.473,1.14-4.736-2.807s-3.421-10.087-4.298-12.455'+
                                    'c-0.877-2.368-1.14-7.894-1.052-9.473c0.088-1.579-0.263-6.403,0.789-8.245c1.053-1.842,1.14-2.368,1.667-4.649'+
                                    'c0.526-2.28,0-17.367-0.263-20.875s-2.368-10.613-4.21-14.122s-6.052-7.368-8.245-9.561s-4.298-4.035-8.245-5.526'+
                                    's-5.438-2.894-7.28-5.263c-1.842-2.368-2.544-7.894-2.193-10.789s2.017-3.859,0.439-6.578s-7.105-5-9.122-7.017'+
                                    's-6.403-9.473-6.841-13.42c-0.439-3.947-2.544-6.228-3.596-9.122c-1.053-2.894-1.579-4.473-2.807-5.789s-4.824-6.14-6.228-9.648'+
                                    's-6.14-9.911-7.368-13.683s-5-8.157-7.806-10.876s-10.087-6.578-11.753-7.455c-1.667-0.877-9.001-3.599-9.543-6.055'+
                                    's0.247-2.894,2.089-5.175s2.456-3.947,4.824-5.789c2.368-1.842,2.807-2.719,4.298-3.947c1.491-1.228,2.456-1.667,3.859-3.245'+
                                    's3.596-3.947,5.614-5.789c2.017-1.842,1.228-2.544,2.631-3.333s2.28-3.245,2.982-4.386c0.702-1.14,3.772-2.193,5.438-3.333'+
                                    'c1.667-1.14,2.982-5.614,4.473-7.105s5.175-8.859,6.754-11.841s0.877-7.455,2.017-10.525s3.596-8.069,3.596-10.613'+
                                    's0.263-12.455-0.789-15.525c-1.053-3.07-2.631-9.911-3.684-13.157c-1.052-3.245-1.228-7.543-2.193-8.508L536.762,21.899z'+
                                '/>'+
                                '<text transform="matrix(1 0 0 1 425.3116 208.6414)" fill="#FFFFFF" font-family="Roboto" font-size="12.6304">WOODLANDS</text>'+
                            '</g>'},
        {Name:"YISHUN",Enbale:"N",map:'<g id="Yishun">'+
                                '<path fill="#8E49FE" stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" d="M624.415,83.355c0,0-10.174,2.28-12.63,2.28'+
                                    's-7.017,2.631-8.771,1.228s-2.281-4.386-3.684-6.666s-5.263-8.771-7.017-11.402s-3.859-6.841-2.456-9.122s3.158-5.263,5.263-5.789'+
                                    's3.508-2.982,4.21-4.386c0.702-1.403,0.351-3.333,0-5.964s-0.877-4.736-3.508-7.368c-2.631-2.631-7.017-6.14-9.473-7.017'+
                                    's-12.455,2.28-14.911,0s-5.964-4.035-8.245-5.263s-3.508-2.281-5.614-4.561s-5.087-1.93-6.666-2.982s-8.42,1.754-8.42,1.754'+
                                    'l-3.684,4.736c0,0,0.869,2.349,1.025,3.196c0.156,0.848,1.572,6.55,2.109,8.563c0.538,2.015,2.764,9.212,3.011,10.972'+
                                    's0.556,10.072,0.538,12.265s-0.426,4.838-1.177,6.747s-2.548,5.378-2.845,7.573s-0.48,6.772-1.427,8.622s-3.008,5.868-4.03,7.667'+
                                   'c-1.022,1.798-2.541,3.948-3.153,4.841c-0.613,0.893-1.38,2.456-2.159,3.87c-0.779,1.415-1.999,3.021-3.429,3.748'+
                                    's-3.557,1.574-4.077,2.541s-0.679,2.165-1.831,3.275s-1.292,0.733-1.787,1.605s-0.735,1.642-1.996,2.838s-4.035,4.094-5.231,5.361'+
                                    's-3.419,2.779-4.814,4.172c-1.395,1.393-3.308,2.952-4.31,3.933c-1.003,0.981-2.24,2.65-3.24,3.977'+
                                   'c-1,1.328-2.546,2.731-3.089,3.784c-0.542,1.053-0.124,3.341,1.09,4.248s5.363,3.05,7.171,3.925s8.514,4.662,9.811,5.567'+
                                    'c1.298,0.905,3.96,3.073,5.37,4.706s3.652,4.428,4.407,5.903s1.867,4.501,2.942,6.378s3.92,6.378,4.801,8.218'+
                                    'c0.881,1.84,3.003,5.976,4.009,7.411c1.006,1.436,2.38,2.663,3.471,4.514c1.09,1.851,1.681,3.457,2.302,4.986'+
                                    'c0.62,1.529,2.132,4.282,2.607,5.475c0.474,1.194,0.989,4.423,1.591,6.082s2.85,6.468,3.986,8.149'+
                                    'c1.136,1.68,2.867,3.784,5.29,5.309s6.094,3.294,6.475,5.395c0.381,2.1-0.486,3.948-0.632,5.679'+
                                    'c-0.147,1.731-0.057,7.705,1.321,9.809c1.377,2.104,3.814,4.903,6.591,6.042s7.394,3.846,8.766,5.19'+
                                    'c1.372,1.343,6.9,6.42,8.353,9.072c1.453,2.652,3.983,9.977,3.983,9.977s1.593-3.011,4.867-3.713'+
                                    'c3.275-0.702,5.146-3.976,8.888-4.912c3.742-0.935,7.485-6.783,11.929-9.122c4.444-2.339,13.332-7.952,16.607-11.227'+
                                    's7.485-4.678,11.929-6.315c4.444-1.637,5.146-1.871,7.485-3.742c2.34-1.871,5.381-2.572,10.292-2.572s12.162-0.468,14.735,0.702'+
                                    's8.187,4.21,11.227,5.614c3.04,1.403,5.614,1.871,8.187,3.04c2.573,1.17,7.485,2.807,9.356,4.444'+
                                    'c1.871,1.637,6.783-0.702,9.59,0.234s6.082,2.573,6.082,2.573l3.977,0.468c0,0,2.573,3.508,3.976,4.912'+
                                    'c1.403,1.403,5.614-0.935,9.356-4.912c3.742-3.976,6.783-12.397,8.654-16.139c1.871-3.742,1.17-4.678,2.807-6.9'+
                                    's6.549-6.666,8.42-12.28c1.871-5.613,0.234-8.42,2.339-10.292c2.105-1.871,3.977-2.339,7.485-5.145s16.607-16.841,20.349-21.284'+
                                    'c3.742-4.444,10.759-12.63,7.952-16.607s-7.017-6.082-11.461-7.017s-9.356-3.014-11.929-3.963s-7.485-2.586-9.356-3.989'+
                                    's-11.461-4.444-14.502-7.485c-3.04-3.04-4.21-3.742-7.952-4.678c-3.742-0.935-8.42-4.444-12.162-7.251s-7.952-6.082-12.63-3.742'+
                                    'c-4.678,2.339-8.654,5.847-10.057,8.42s-0.935,4.444-3.04,6.082c-2.105,1.637-5.614,2.105-6.783,4.444'+
                                    'c-1.17,2.339-3.508,5.38-3.508,5.38s-3.04-2.339-5.847-3.275c-2.807-0.935-3.04,1.17-7.251-1.871s-17.074-10.993-21.284-15.437'+
                                    's-7.719-6.082-7.719-6.082s-1.559-1.871-4.405-3.742s-9.863-10.057-12.202-11.227s-6.315-6.082-7.251-7.952'+
                                    'C626.812,85.986,626.462,84.934,624.415,83.355z" />'+
                                '<text transform="matrix(1 0 0 1 599.9146 170.4237)" fill="#FFFFFF" font-family="Roboto" font-size="12.6304">YISHUN</text>'+
                            '</g>'},
        {Name:"QUEENSTOWN",Enbale:"N",map:'<g id="Queens_Town">'+
                                '<path fill="#8E49FE" stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" d="M491.094,520.508c0,0,3.859-2.982,6.14-5.263'+
                                    'c2.28-2.281,1.579-2.105,2.456-4.561c0.877-2.456,2.807-6.315,3.859-7.894s1.053-4.912,1.93-7.192'+
                                    'c0.877-2.281,0.351-5.263,2.105-6.841c1.754-1.578,0.877-4.702,0.877-4.702s-4.062-3.327-4.75-3.786s-6.694-4.641-7.53-5.282'+
                                    'c-0.836-0.642-6.006-4.532-7.505-6.354c-1.499-1.822-2.781-4.557-3.275-7.592c-0.494-3.035-0.752-6.312-2.202-8.303'+
                                    'c-1.45-1.991-6.996-8.382-9.423-10.598s-6.037-5.477-7.971-6.545c-1.934-1.069-7.944-3.37-10.297-3.885'+
                                    'c-2.353-0.515-9.328-1.829-11.141-2.167s-9.248-1.386-10.542-1.218c-1.295,0.168-4.916,1.231-6.611,2.963s-4.087,4.492-5.654,6.18'+
                                    'c-1.565,1.688-5.543,7.74-6.228,9.475c-0.686,1.735-2.715,8.356-3.174,10.327c-0.459,1.971-1.351,4.238-1.351,4.238'+
                                    's1.588,1.657,2.575,3.478c0.987,1.82,1.53,2.457,2.972,3.675c1.441,1.217,5.58,5.404,6.877,6.739'+
                                    'c1.297,1.335,4.2,3.841,5.346,5.074c1.147,1.233,3.476,4.13,5.132,4.936c1.656,0.806,2.207,0.975,4.759,0.746'+
                                    's3.478-0.982,4.734,0.145c1.256,1.128,5.767,5.47,8.672,7.208c2.906,1.738,10.012,4.032,11.37,5.341'+
                                    'c1.358,1.309,1.449,1.902,0.812,2.41c-0.637,0.508-0.067,1.443,1.599,1.443c1.666,0,1.579,2.631,3.508,2.982'+
                                    'c1.93,0.351,2.631,0,4.649,1.667c2.017,1.667,6.052,5.877,8.508,7.719C484.776,516.912,487.761,521.122,491.094,520.508z'+
                                '/>'+

                                '<text transform="matrix(0.7991 0.6012 -0.6012 0.7991 423.7999 451.6173)" fill="#FFFFFF" font-family="Roboto" font-size="12.6304">QUEENSTOWN </text>'+
                            '</g>'},
        {Name:"TIONG BAHRU",Enbale:"N"},
        {Name:"ORCHARD",Enbale:"N"},
        {Name:"CDB",Enbale:"N"},
        {Name:"JLN BESAR",Enbale:"N"},
        {Name:"TANJONG KATONG",Enbale:"N"},
        {Name:"GEYLANG",Enbale:"N"},
        {Name:"PAYA LEBAR",Enbale:"N"},
        {Name:"TAMPINES",Enbale:"N"},
        {Name:"BEDOK",Enbale:"N"},
        {Name:"ANG MO KIO",Enbale:"N"},
        {Name:"HOUGANG",Enbale:"N"},
        {Name:"CHANGI",Enbale:"N",map:'<g id="Changi" class="deactivate">'+
                                '<path fill="#CCCCCC" stroke="#FFFFFF" stroke-width="2" stroke-miterlimit="10" d="M1094.723,293.687l-10.525-32.979l-5.614-8.771'+
                                    'l-11.227-14.385l-6.666-6.315l-3.488-1.403c0,0-1.492,1.351-2.262,1.737c-0.77,0.387-3.951,1.481-4.444,1.61'+
                                    'c-0.493,0.128-4.344,1.37-4.344,1.37s-5.179,1.555-6.417,1.89s-4.946,1.254-4.946,1.254s-2.681,0.348-3.68,1.412'+
                                    'c-0.998,1.064-2.763,3.486-3.52,5.183c-0.758,1.696-2.264,5.355-2.751,8.128c-0.487,2.774-1.203,8.076-2.483,11.24'+
                                    'c-1.281,3.163-3.406,7.905-6.813,12.133s-7.06,8.779-8.58,10.755c-1.518,1.976-5.269,7.018-6.877,8.735'+
                                    'c-1.608,1.717-5.488,4.718-6.804,5.807c-1.316,1.088-6.203,5.282-6.859,5.861c-0.656,0.579-2.807,2.384-4.375,3.411'+
                                    'c-1.569,1.027-4.917,3.428-4.917,3.428l1.462,4.723c0,0,2.459,4.11,3.209,6.352c0.749,2.243,3.757,11.115,4.393,12.95'+
                                    's3.292,9.891,4.401,12.144s5.458,9.643,6.691,11.408s5.48,7.478,6.609,8.844c1.128,1.365,4.1,2.758,5.34,3.329'+
                                    'c1.241,0.571,7.084,3.271,8.57,3.812c1.485,0.54,3.966,1.779,4.839,2.442c0.872,0.663,1.448,1.453,2.741,1.797'+
                                    'c1.294,0.345,6.302,1.681,6.302,1.681s-3.488,5.96-4.327,6.9s-5.875,6.58-6.787,7.601c-0.912,1.022-2.516,3.028-3.757,4.955'+
                                    's-6.35,10.04-6.35,10.04l-2.052,3.892l2.456-0.233c0,0,3.318,0.292,4.035,0.233s1.579,0,1.579,0l7.022-7.182'+
                                    'c0,0,1.344-1.377,3.155-0.98c1.81,0.398,3.417,1.048,3.506,2.372s-0.618,4.037-1.929,6.176c-1.31,2.139,1.812,3.881,4.619,3.881'+
                                    's9.59,3.275,13.8,5.614c4.21,2.339,15.437,4.21,18.01,6.783s15.203,8.888,18.478,9.356s11.929-1.871,16.841-4.678'+
                                    's10.292-4.444,14.969-7.485c4.678-3.04,10.759-10.292,10.759-10.292s10.057-28.301,13.332-34.383s6.315-19.414,11.461-26.898'+
                                    'c5.146-7.485,9.122-20.115,9.356-24.091s2.807-2.105-2.807-6.783s-17.776-7.485-24.091-10.993s-25.963-9.122-30.406-11.695'+
                                    'c-4.444-2.573-3.976-0.936-6.549-4.912C1093.436,296.493,1094.723,293.687,1094.723,293.687z'+
                                '/>'+
                                '<text transform="matrix(1 0 0 1 1049.6973 350.2908)" fill="#FFFFFF" font-family="Roboto" font-size="12.6304">CHANGI</text>'+
                            '</g>'}
    ]
    constructor(private _instanceService: EventSubscribeService, private _gof3rModule: Gof3rModule, private router: Router, private active_router: ActivatedRoute, private _pickupService: PickupService, private mapsAPILoader: MapsAPILoader, private ngZone: NgZone, private _homeservice: HomeService, private _gof3rUtil: Gof3rUtil, private gof3rModule: Gof3rModule, public autoCompleteService: AutoCompleteService) {
        this.signUp = new SingUpModel();
        this.listDeliveryAddress = new ListDeliveryAddress();
        this.listDeliveryAddressShow = new ListDeliveryAddress();
        this.error= new ErrorModel();
        this.blockUI.stop()

        
    }
    ngOnInit() {
        this.loadAddress()
        this.checkLoginUser();
        this.initJQuery()
        this.registerDeviceRequest()
        //this.GetOutletListByLocation()

        // this.searchControl = new FormControl(); comment danh cho google map
        // this.mapsAPILoader.load().then(() => {
        //     let autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {
        //         types: ["geocode"]
        //     });
        //     autocomplete.addListener("place_changed", () => {
        //         this.ngZone.run(() => {
        //             //get the place result
        //             let place: google.maps.places.PlaceResult = autocomplete.getPlace();

        //             //verify result
        //             if (place.geometry === undefined || place.geometry === null) {
        //                 return;
        //             }

        //             //set latitude, longitude and zoom
        //             this.lat = place.geometry.location.lat();
        //             this.lng = place.geometry.location.lng();
        //             localStorage.setItem('lat', this.lat + '');
        //             localStorage.setItem('long', this.lng + '');
        //             localStorage.setItem('la', this.lat + ',' + this.lng + "#_#_")
        //             
        //         });
        //     });
        // });
    }
    makeIconURL() {

        return require('../../assets/images/house-black.png')
    }
    
    loadAddress() {
        if (localStorage.getItem("cus") != null) {// get address when user login
            if (localStorage.getItem("addressDelivery") != null && localStorage.getItem("addressDelivery") != "undefined") {
                let address = JSON.parse(localStorage.getItem("addressDelivery"))

                this.inputAddress = address.Address;
                let strCut = address.GeoLocation.split(",");
                this.lat = strCut[0];
                this.lng = strCut[1];
                localStorage.setItem('lat', this.lat + '');
                localStorage.setItem('long', this.lng + '');
                localStorage.setItem('la', this.lat + ',' + this.lng + "#_#_")
            }
            else {//when user login but have not addressDelivery

                this.checkUserLoginChangeAddress()
            }
        }
        else { // get address when user not login
            if (localStorage.getItem("address") != null) {
                this.addressList = JSON.parse(localStorage.getItem("address"));
                if (this.addressList.AddressListInfo.length > 0) {
                    this.inputAddress = this.addressList.AddressListInfo[0].StreetAddress;
                    this.lat = Number.parseFloat(this.addressList.AddressListInfo[0].lat);
                    this.lng = Number.parseFloat(this.addressList.AddressListInfo[0].long);
                    localStorage.setItem('lat', this.lat + '');
                    localStorage.setItem('long', this.lng + '');
                    localStorage.setItem('la', this.lat + ',' + this.lng + "#_#_")
                }

            }
        }
    }
    deliveryClick() {

        if (this.inputAddress) {
            this.addressList = new AddressListModel();
            this.actionClickDlivery = 1;
            this.actionClickPickup = 0;
            this.orderType = "DELIVERY";
            this.haveData = 1
            localStorage.setItem("orderType", this.orderType)
            $('.map-wrap').slideDown()
            // this._homeservice.getLocationAddress(this.lat, this.lng).then(data => {
            //     var address = data["results"][0]["formatted_address"];
            //     

            //     this.inputAddress = address
            //     // var arraySplited = address.split(",");
            //     if (localStorage.getItem("address") != null) {
            //         this.addressList = JSON.parse(localStorage.getItem("address"));
            //         for (let j = 0; j < this.addressList.AddressListInfo.length; j++) {
            //             this.addressList.AddressListInfo[j].isCheck = false;
            //         }

            //     }
            //     let item = new AddressIteModel();

            //     item.StreetAddress = address;
            //     item.lat = this.lat + ''
            //     item.long = this.lng + ''
            //     item.isCheck = true;
            //     let arrayName = item.StreetAddress.split(',');
            //     item.Name = arrayName[0];
            //     this.addressList.AddressListInfo.push(item);
            //     localStorage.setItem('address', JSON.stringify(this.addressList));

            // })
            if (localStorage.getItem("address") != null) {
                this.addressList = JSON.parse(localStorage.getItem("address"));
                for (let j = 0; j < this.addressList.AddressListInfo.length; j++) {
                    this.addressList.AddressListInfo[j].isCheck = false;
                }

            }
        }
        else {
            this.haveData = 0
        }




    }
    pikcupClick() {
        if (this.inputAddress) {
            this.addressList = new AddressListModel();
            this.actionClickPickup = 1;
            this.actionClickDlivery = 0;
            this.orderType = "PICKUP"
            this.haveData = 1
            localStorage.setItem("orderType", this.orderType)
            $('.map-wrap').slideDown()
            this._homeservice.getLocationAddress(this.lat, this.lng).then(data => {
                var address = data["results"][0]["formatted_address"];

                this.inputAddress = address
                // var arraySplited = address.split(",");
                if (localStorage.getItem("address") != null) {
                    this.addressList = JSON.parse(localStorage.getItem("address"));
                    for (let j = 0; j < this.addressList.AddressListInfo.length; j++) {
                        this.addressList.AddressListInfo[j].isCheck = false;
                    }

                }
                let item = new AddressIteModel();

                item.StreetAddress = address;
                item.lat = this.lat + ''
                item.long = this.lng + ''
                item.isCheck = true;
                let arrayName = item.StreetAddress.split(',');
                item.Name = arrayName[0];
                this.addressList.AddressListInfo.push(item);
                localStorage.setItem('address', JSON.stringify(this.addressList));

            })
        }
        else {
            this.haveData = 0
        }

    }
    registerDeviceRequest() {

        var request = new RegisterDeviceRequest();
        if (localStorage.getItem('device') != null) {
            request.DeviceNumber = localStorage.getItem('device');
        }
        else {
            let device_number = this._gof3rUtil.guid();
            localStorage.setItem('device', device_number)
            request.DeviceNumber = device_number;
        }

        // request.DeviceNumber='9999'
        var jsonRequest = JSON.stringify(request);

        this._homeservice.registerDevice(jsonRequest).then(data => {

            this.registerDevice = (data);
            localStorage.setItem('KEK', (this.registerDevice.KEKWorkingKey));
            localStorage.setItem('WK', (this.registerDevice.APIWorkingKey));

            this.getInitParam();

        });
    }
    getInitParam() {

        var comomrequest = new GetInitParamRequest();
        if (localStorage.getItem('device') != null) {
            comomrequest.DeviceNumber = localStorage.getItem('device');
        }
        else {
            let device_number = this._gof3rUtil.guid();

            comomrequest.DeviceNumber = device_number
        }
        if (localStorage.getItem('la') != null) {

            comomrequest.Location = localStorage.getItem('la');

        }
        else {
            comomrequest.Location = ""
        }
        //comomrequest.DeviceNumber='9999'

        var requestData = new RequestNull();
        var jsonCommon = JSON.stringify(comomrequest);

        var jsonRequest = JSON.stringify(requestData);

        this._homeservice.getServiceHome(jsonCommon, jsonRequest).then(data => {

            this.getInitialParams = data;
            
            for(let i = 0; i< this.getInitialParams.CountryInfo.length; i++){
               
                if(this.getInitialParams.CountryInfo[i].CountryCode==="65"){
                    this.signUp.PhoneCode="+"+this.getInitialParams.CountryInfo[i].CountryCode;
                }
            }
            this.isHaveCountry=true;
            //this.haveDataInit=true
            localStorage.setItem("IN", this._gof3rUtil.encryptParams(JSON.stringify(this.getInitialParams)));

            //this.blockUI.stop()
        });
    }
    GetAllOutletListV2() {
        let common_data = new CommonDataRequest();
        var _location = localStorage.getItem("la");
        common_data.Location = _location
        common_data.ServiceName = "GetAllOutletListV2";
        let common_data_json = JSON.stringify(common_data);

        let request_data = new GetAllOutletListV2Request();
        request_data.OrderType = this.orderType;
        if (this.orderType === ORDER_PICKUP || !this.orderType) {
            request_data.OrderFor = "";
        } else if (this.orderType === ORDER_DELIVERY) {
            request_data.OrderFor = "ASAP";
        }
        request_data.OrderFor = ""
        request_data.CustomerId = "";
        request_data.FromRow = 0;
        request_data.MCC = "17";
        request_data.KeyWords = "";
        request_data.MerchantOutletId = "";
        request_data.SubCategoryId = "";
        let request_data_json = JSON.stringify(request_data);


        this._pickupService.GetAllOutletListV2(common_data_json, request_data_json).then(data => {
            //this._gof3rModule.checkInvalidSessionUser(data.ResultCode);

            this.getAllOutletListV2 = data;
            if (this.getAllOutletListV2.MerchantOutletListInfo.length == 0) {
                // this.noData=true;
                // this.haveData=false;
            }
            else {
                //     this.noData=false;
                //  this.haveData = true;
            }

        })
    }
    findRestaurants() {
        //this.GetAllOutletListV2();
        this.router.navigateByUrl('search-result')
    }
    initJQuery() {

        $('.header-top').append('<div class="login-overlay"></div>');
        $('.login-wrap .login').on('click', function (event) {
            event.preventDefault();
            $('.login-dropdown').hide();
            $('.login-dropdown-step2').hide();
            $('.login-dropdown-step3').hide();
            $('.login-dropdown-had').hide();
            $('.login-overlay').removeClass('show');
            $('.login-wrap .login').not(this).removeClass('hide-form');

            if ($(this).hasClass('hide-form')) {
                $(this).parents('.login-wrap').find('.login-dropdown').hide();
                $(this).removeClass('hide-form');
                $('body').css({
                    overflow: '',
                    height: ''
                });;
            } else {
                var valueCheckUser = $('#check-user').text();

                if (valueCheckUser === 'true') {

                    $(this).parents('.login-wrap').find('.login-dropdown-had').slideDown();
                } else if (valueCheckUser === 'false') {

                    $(this).parents('.login-wrap').find('.login-dropdown').slideDown();
                }

                $('.login-overlay').addClass('show');
                $(this).addClass('hide-form');
                $('body').css({
                    overflow: 'hidden',
                    height: '100%'
                });;
            }
        });
        $('.btn-change-address').on('click', function (event) {
            $(this).parents('.login-wrap').find('.login-dropdown').hide();
            $(this).parents('.login-wrap').find('.login-dropdown-step2').slideDown();
        });
        $('.login-overlay').on('click', function (event) {
            event.preventDefault();
            $('.login-dropdown').hide();
            $('.login-dropdown-step2').hide();
            $('.login-dropdown-step3').hide();
            $('.login-dropdown-had').hide();
            $('.login-overlay').removeClass('show');
            $('.login-wrap .login').removeClass('hide-form');
            $('body').css({
                overflow: '',
                height: ''
            });;
        });
        $('.loginform-dropdown .sign-up a').on('click', function (event) {
            event.preventDefault();

            $('.signup-dropdown').fadeIn();
            $('.loginform-dropdown').hide();
        });

        // $('.signup-form form button').on('click', function (event) {
        //     event.preventDefault();

        //     $('.signup-dropdown-otp').fadeIn();
        //     $('.signup-dropdown').hide();
        // });

        $('.back-login').on('click', function (event) {
            event.preventDefault();
            $('.signup-dropdown').hide();
            $('.loginform-dropdown').fadeIn();
        });
        $('.deli-list .deli').on('click', function (event) {
            event.preventDefault();
            $('.how-top .login-dropdown').show();
            if (!$('.how-top .close-how').length) {
                $('.how-top .login-dropdown').append('<div class="close-how"><span></span></div>');
            }
            $('.how-top .login-dropdown').addClass('show-mobile');

            $('.close-how').on('click', function (event) {
                event.preventDefault();
                $('.how-top .login-dropdown').hide();
            });
        });

        $('.deli-list .asap').on('click', function (event) {
            event.preventDefault();
            $('.when-top .login-dropdown').show();
            if (!$('.when-top .close-how').length) {
                $('.when-top .login-dropdown').append('<div class="close-how"><span></span></div>');
            }
            $('.when-top .login-dropdown').addClass('show-mobile');

            $('.close-how').on('click', function (event) {
                event.preventDefault();
                $('.when-top .login-dropdown').hide();
            });
        });

        $('.deli-list .yourlocal').on('click', function (event) {
            event.preventDefault();
            $('.acc-top .select-location').show();
            if (!$('.acc-top .close-how').length) {
                $('.acc-top .select-location').append('<div class="close-how"><span></span></div>');
            }
            $('.acc-top .select-location').addClass('show-mobile');

            $('.close-how').on('click', function (event) {
                event.preventDefault();
                $('.acc-top .select-location').hide();
            });
        });


        $('.page-active').on('click', function (event) {
            event.preventDefault();
            if ($(this).hasClass('hide-sidebar')) {
                $('.sidebar-mobile').slideUp();
                $(this).removeClass('hide-sidebar');
            } else {
                $('.sidebar-mobile').slideDown();
                $(this).addClass('hide-sidebar');
            }
        });
        $('.map-svg svg g').on('click', function (event) {
            event.preventDefault();
            var idPath = this.id;
            $('.map-svg svg g').removeClass('active');
            $(this).addClass('active');
            let mapContent = $('#mapContent_' + idPath);
            $('.map-list').hide();
            mapContent.fadeIn();
        });

        // sidebar mobile
        $('.page-active').on('click', function (event) {
            event.preventDefault();
            if ($(this).hasClass('hide-sidebar')) {
                $('.sidebar-mobile').slideUp();
                $(this).removeClass('hide-sidebar');
            } else {
                $('.sidebar-mobile').slideDown();
                $(this).addClass('hide-sidebar');
            }
        });
        if ($(".nano").length) {
            $(".nano").nanoScroller();
            $('.tracker-tab-wrap .nav-tabs .nav-link').on('click', function (event) {
                setTimeout(function () {
                    $("body .nano").nanoScroller();
                }, 1000);
            });
        }
        $("#enter-new-address").on("keydown", function (event) {
            if (event.which == 13) {
                $(this).parents('.login-wrap').find('.login-dropdown-step3').slideDown();
                $(this).parents('.login-wrap').find('.login-dropdown-step2').hidden();
            }

        });
        // form order search
        // $('.btn-search-order').on('click', function (event) {
        //     event.preventDefault();
        //     $('.form-search-order').addClass('active');
        //     $('.form-search-order input').focus();
        // });
        // $('.close-search-order').on('click', function (event) {
        //     event.preventDefault();
        //     $('.form-search-order').removeClass('active');
        // });
    }
    checkLoginUser() {
        if (localStorage.getItem("cus") != null && localStorage.getItem("cus") != 'undefined') {
            this.customerInfoMain = JSON.parse(this._gof3rUtil.decryptByDESParams(localStorage.getItem("cus")));
            this.isLogin = this.customerInfoMain.CustomerInfo[0].CustomerName
            this.userNameLogOut = this.customerInfoMain.CustomerInfo[0].UserName;
            this.isUserLogin = true;
        }
        else {

            this.isUserLogin = false;
        }
    }
    userLogin() {
        if (this.userName !== '' || this.passWord !== '') {
            this.blockUI.start()
            this.customerInfoMain = new CustomerInfoMainModel();
            let common_data = new CommonDataRequest();
            var _location = localStorage.getItem("la");
            common_data.AppId = "3.6"
            common_data.Location = _location
            common_data.ServiceName = "CheckLogon";
            let common_data_json = JSON.stringify(common_data);


            let requestData = new CheckLogonRequest();
            requestData.UserName = this.userName
            requestData.Password = this.passWord;
            requestData.OTP = ""
            let requestDataJson = JSON.stringify(requestData)
            this._pickupService.CheckLogon(common_data_json, requestDataJson).then(data => {

                this.customerInfoMain = data;
                if (this.customerInfoMain.ResultCode === "000") {
                    console.log("login:" + JSON.stringify(this.customerInfoMain))
                    localStorage.setItem("cus", this._gof3rUtil.encryptParams(JSON.stringify(this.customerInfoMain)))

                    this.isLogin = this.customerInfoMain.CustomerInfo[0].CustomerName;
                    $('.login-dropdown').hide();
                    $('.login-overlay').removeClass('show');
                    $('.login-wrap .login').removeClass('hide-form');
                    $('body').css({
                        overflow: '',
                        height: ''
                    });;
                    this.checkUserLoginChangeAddress()
                    this.getInitParam()
                    this.blockUI.stop()
                }
                else{
                    this.error.ResultDesc=this.customerInfoMain.ResultDesc;
                    this.showPopupPaymentSuccess()
                    this.blockUI.stop()
                }


            })
        }

    }
     showPopupPaymentSuccess() {
        var el = $('#success-popup');
        if (el.length) {
            $.magnificPopup.open({
                items: {
                    src: el
                },
                type: 'inline'
            });
        }
    }
    deleteAddress() {
        this.inputAddress = ""
        this.list = []
        this.showListSelectAddress = false;
    }
    getCurrentLocation() {
        if (window.navigator && window.navigator.geolocation) {
            this.blockUI.start();
            window.navigator.geolocation.getCurrentPosition(
                position => {

                    this.geolocationPosition = position,

                        this._homeservice.getLocationAddress(position.coords.latitude, position.coords.longitude).then(data => {
                            var address = data["results"][0]["formatted_address"];

                            this.inputAddress = address
                            // var arraySplited = address.split(",");

                            this.lat = position.coords.latitude;
                            this.lng = position.coords.longitude;
                            localStorage.setItem('lat', this.lat + '');
                            localStorage.setItem('long', this.lng + '');
                            localStorage.setItem('la', this.lat + ',' + this.lng + "#_#_")
                            this.list = [];
                            this.showListSelectAddress = false;
                            this.blockUI.stop();
                            //this.locationrequest =this.lang+","+this.long+"#_#_";

                            // localStorage.setItem('la',this.locationrequest);
                            // localStorage.setItem('lat',position.coords.latitude+'');
                            // localStorage.setItem('long',position.coords.longitude+'');
                            // localStorage.setItem('latcur',position.coords.latitude+'');
                            // localStorage.setItem('longcur',position.coords.longitude+'')
                            // this.registerDeviceRequest()

                        })
                },
                error => {
                    switch (error.code) {
                        case 1:

                            break;
                        case 2:

                            break;
                        case 3:

                            break;
                    }
                }
            );
        };
    }
    checkShowPopup() {

        this.checkLoginUser();
    }
    logOutUser(userName: string) {
        this.blockUI.start();

        let common_data = new CommonDataRequest();
        var _location = localStorage.getItem("la");
        common_data.Location = _location
        common_data.ServiceName = "Logout";
        var common_data_json = JSON.stringify(common_data);

        let result: string = "";
        let dataRequest = new RequestLogOutModel();
        dataRequest.UserName = userName;
        let requestDataJson = JSON.stringify(dataRequest);
        this._pickupService.LogOutCustomer(common_data_json, requestDataJson).then(data => {
            if (data.ResultCode === "000") {
                $('.login-dropdown-had').hide();
                $('.login-overlay').removeClass('show');
                $('.login-wrap .login').removeClass('hide-form');
                $('body').css({
                    overflow: '',
                    height: ''
                });;
                localStorage.clear();
                this.isLogin = "LOG IN"
                this.inputAddress = ""
                this.registerDeviceRequest();
                this.blockUI.stop()
            }
        })
    }

    RegisterOPT() {

        if(this.signUp.Password===this.signUp.ConfrimPassword){
            let common_data = new CommonDataRequest();
        var _location = localStorage.getItem("la");
        common_data.Location = _location
        common_data.ServiceName = "RequestRegistrationOTP";
        var common_data_json = JSON.stringify(common_data);

        let requestData = new RequestRegisterOTP();
        requestData.Email = this.signUp.Email;
        requestData.Mobile = this.signUp.PhoneNumber;
        let request_data_json = JSON.stringify(requestData);
        this._pickupService.RequestRegistrationOTP(common_data_json, request_data_json).then(data => {
            this.responseData = data;
            console.log("RegisterOPT"+ JSON.stringify(this.responseData))
            if (this.responseData.ResultCode == "000") {
                let requestRegister = new RequestRegisterCustomerModel();
                requestRegister.CustomerName = this.signUp.FullName;
                requestRegister.Email = this.signUp.Email
                requestRegister.Mobile =this.signUp.PhoneCode+ this.signUp.PhoneNumber;
                requestRegister.Password = this.signUp.Password
                $('.signup-dropdown-otp').fadeIn();
                $('.signup-dropdown').hide();
                 this.move()
                // this._instanceService.sendCustomEvent(requestRegister);
                // this._router.navigateByUrl('/login-otp')

            } else {
                // this.isError=true
                this.error.ResultDesc = this.responseData.ResultDesc;
                this.showPopupPaymentSuccess()
                //   $('.signup-dropdown-otp').fadeIn();
                // $('.signup-dropdown').hide();
                //this.move()

            }
        })
    }
    else{
        this.error.ResultDesc="The password is not match"
        this.showPopupPaymentSuccess();
    }
        

    }
    inputOTP(even) {
        let lenght = (even.target.value.length)
        if (lenght == 6) {
            this.registerCustomer(even.target.value)
        }

    }
    registerCustomer(otp: string) {
        this.blockUI.start("Sign up.........!")
        let common_data = new CommonDataRequest();
        var _location = localStorage.getItem("la");
        common_data.Location = _location
        common_data.ServiceName = "RegisterCustomer";
        var common_data_json = JSON.stringify(common_data);

        let requestRegister = new RequestRegisterCustomerModel();
        requestRegister.CustomerName = this.signUp.FullName
        requestRegister.Email = this.signUp.Email
        requestRegister.Mobile =this.signUp.PhoneCode+ this.signUp.PhoneNumber
        requestRegister.OTP = otp
        requestRegister.Password = this.signUp.Password
        let request_data_json = JSON.stringify(requestRegister);

        this._pickupService.RegisterCustomer(common_data_json, request_data_json).then(data => {
            this.customerInfoMain = data;

            if (this.customerInfoMain.ResultCode == "000") {
                // this._instanceService.sendCustomEvent(this.customerLoginMain.CustomerInfo[0].UserName);
                // this._router.navigateByUrl('/login')
                this.error.ResultDesc="Sign up successful."
                this.showPopupPaymentSuccess()
                $('.signup-dropdown-otp').hide();
                $('.loginform-dropdown').fadeIn();
                this.getInitParam();
                this.blockUI.stop();
            }
            else{
                this.error.ResultDesc=this.customerInfoMain.ResultDesc;
                this.showPopupPaymentSuccess();
                this.blockUI.stop()
            }
        })
    }
    checkUserLoginChangeAddress() {

        this.customerInfoMain = JSON.parse(this._gof3rUtil.decryptByDESParams(localStorage.getItem("cus")));
        let common_data = new CommonDataRequest();
        var _location = localStorage.getItem("la");
        common_data.Location = _location
        common_data.ServiceName = "GetDeliveryAddresses";
        let common_data_json = JSON.stringify(common_data);

        let data_request = { CustomerId: this.customerInfoMain.CustomerInfo[0].CustomerId };
        let data_request_json = JSON.stringify(data_request);

        this._pickupService.GetDeliveryAddresses(common_data_json, data_request_json).then(data => {

            this._gof3rModule.checkInvalidSessionUser(data.ResultCode)
            // this.showListDelivery=true;
            // this.showListAddresNotLogin=false
            this.listDeliveryAddress = data;
            if (this.listDeliveryAddress.DeliveryAddressList.length > 0) {
                localStorage.setItem("addressDelivery", JSON.stringify(this.listDeliveryAddress.DeliveryAddressList[0]))
                setTimeout(() => {
                    let address = JSON.parse(localStorage.getItem("addressDelivery"))
                    this.inputAddress = address.Address;
                    let strCut = address.GeoLocation.split(",");
                    this.lat = strCut[0];
                    this.lng = strCut[1];
                    localStorage.setItem('lat', this.lat + '');
                    localStorage.setItem('long', this.lng + '');
                    localStorage.setItem('la', this.lat + ',' + this.lng + "#_#_")
                }, 50)

            }
            else {
                if (localStorage.getItem("address") != null) {
                    this.addressList = JSON.parse(localStorage.getItem("address"));
                    if (this.addressList.AddressListInfo.length > 0) {
                        this.inputAddress = this.addressList.AddressListInfo[0].StreetAddress;
                        this.lat = Number.parseFloat(this.addressList.AddressListInfo[0].lat);
                        this.lng = Number.parseFloat(this.addressList.AddressListInfo[0].long);
                        localStorage.setItem('lat', this.lat + '');
                        localStorage.setItem('long', this.lng + '');
                        localStorage.setItem('la', this.lat + ',' + this.lng + "#_#_")
                    }

                }

            }



            //this.listDeliveryAddress = data;
        })

    }
    accountClick() {
        this._instanceService.sendCustomEvent("MyProfile");
        //window.location.href=("/account")
        ///this.router.navigate(["/account"])
    }
    orderHistoryClick() {
        this._instanceService.sendCustomEvent("OrderHistory");
        this.router.navigateByUrl("/order-history")
    }
    inviteFriend() {
        this._instanceService.sendCustomEvent("Invite");
        this.router.navigateByUrl("/invite");
    }
    help() {
        this._instanceService.sendCustomEvent("Help");
        this.router.navigateByUrl("/help");
    }
    checkInputPostalCode(event) {
        var postal_code: string = event.target.value;

        let common_data = new CommonDataRequest();
        var _location = localStorage.getItem("la");
        common_data.Location = _location
        common_data.ServiceName = "SearchSingaporeAddress";
        let common_data_json = JSON.stringify(common_data);

        let data_request = { SearchValue: postal_code };
        let request_data_json = JSON.stringify(data_request);
        this._pickupService.SearchSingaporeAddress(common_data_json, request_data_json).then(data => {

            this.list = data;
            this.showListSelectAddress = true;
            // for(let i = 0; i< data.AddressList.length; i++){
            //     this.list.push({name:data.AddressList[i].Address,postalCode:data.AddressList[i].PostalCode,lat:data.AddressList[i].Latitude,lng:data.AddressList[i].Longitude})

            // }

        })
    }
    Selected(item: SelectedAutocompleteItem) {

    }
    setList(list) {
        this.autoCompleteService.setDynamicList(list);
        // this will log in console if your list is empty.
    }
    selectAddress(addres: string, lat: string, lng: string) {
        this.addressList = new AddressListModel();
        this.list = [];
        this.showListSelectAddress = false;
        this.inputAddress = addres;

        this.lat = Number.parseFloat(lat);
        this.lng = Number.parseFloat(lng);
        localStorage.setItem('lat', this.lat + '');
        localStorage.setItem('long', this.lng + '');
        localStorage.setItem('la', this.lat + ',' + this.lng + "#_#_")
        let item = new AddressIteModel();

        item.StreetAddress = addres;
        item.lat = this.lat + ''
        item.long = this.lng + ''
        item.isCheck = true;
        let arrayName = item.StreetAddress.split(',');
        item.Name = arrayName[0];
        this.addressList.AddressListInfo.push(item);
        localStorage.setItem('address', JSON.stringify(this.addressList));
    }
    GetOutletListByLocation() {

        let common_data = new CommonDataRequest();
        var _location = localStorage.getItem("la");
        common_data.Location = _location
        common_data.ServiceName = "GetOutletListByLocation";
        let common_data_json = JSON.stringify(common_data);
        let data_request = { Lang: "en" };
        let data_request_json = JSON.stringify(data_request);
        console.log("common_data_json:" + common_data_json)
        console.log("data_request_json:" + data_request_json)
        this._pickupService.GetOutletListByLocation(common_data_json, data_request_json).then(data => {
            console.log("xxxthanh:" + JSON.stringify(data));
        })
    }
    showSelectCountry(){
        var el = $('#country-popup');
        if (el.length) {
            $.magnificPopup.open({
                items: {
                    src: el
                },
                type: 'inline'
            });
        }
    }
    selectCountry(countryCode:string){
        this.selectCountryCode="+"+countryCode;;
       
    }
    closeCountry(){
         this.signUp.PhoneCode=this.selectCountryCode;
        $.magnificPopup.close()
    }
     move() {
    var elem = document.getElementById("per"); 
    var width = 1;
    var id = setInterval(frame, 100);
    function frame() {
        if (width >= 100) {
            clearInterval(id);
        } else {
            width++; 
            elem.style.width = width + '%'; 
        }
    }
}


}